apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: lambda-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.11, pipelines.kubeflow.org/pipeline_compilation_time: '2022-02-13T23:14:54.943069',
    pipelines.kubeflow.org/pipeline_spec: '{"name": "<lambda>"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.11}
spec:
  entrypoint: lambda
  templates:
  - name: lambda
    dag:
      tasks:
      - {name: read-berka-data, template: read-berka-data}
      - name: samples-generation
        template: samples-generation
        dependencies: [train-sequential-synthetizer]
      - name: train-sequential-synthetizer
        template: train-sequential-synthetizer
        dependencies: [read-berka-data]
  - name: read-berka-data
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-1ea80c4b-fbbf-4fbb-8f68-849f5eacc55c
          --cos-directory "Synthetic_Sequential_BERKA-0213231454" --cos-dependencies-archive
          "Read data-269550f7-f6af-4af6-862c-9806e6cc1b8d.tar.gz" --file "Read data.ipynb"
          --outputs "outputs/real_data.csv;outputs/dataset_attrs.json;outputs/data_columns.pkl;outputs/shape.json" ']
      command: [sh, -c]
      env:
      - {name: DATASET_PATH, value: 'gs://ydata_testdata/timeseries/berka/data.csv'}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220207113243.azurecr.io/pipelines_ydata:0.32.25-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: Read data.ipynb, elyra/pipeline-source: Synthetic_Sequential_BERKA.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Synthetic_Sequential_BERKA
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: Read_Berka_data
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: samples-generation
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-1ea80c4b-fbbf-4fbb-8f68-849f5eacc55c
          --cos-directory "Synthetic_Sequential_BERKA-0213231454" --cos-dependencies-archive
          "Generating samples-58a43eb4-72f9-455c-a739-b7bdd29493fd.tar.gz" --file
          "Generating samples.ipynb" --inputs "outputs/shape.json;outputs/model.pkl;outputs/real_data.csv;outputs/dataset_attrs.json;outputs/data_columns.pkl"
          --outputs "outputs/synth_data.csv" ']
      command: [sh, -c]
      env:
      - {name: OUTPUT_PATH, value: 'gs://ydata_testdata/timeseries/berka/synth_samples.csv'}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220207113243.azurecr.io/pipelines_ydata:0.32.25-cpu
      resources:
        requests: {cpu: '2'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: Generating samples.ipynb, elyra/pipeline-source: Synthetic_Sequential_BERKA.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Synthetic_Sequential_BERKA
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: Samples_generation
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: train-sequential-synthetizer
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-1ea80c4b-fbbf-4fbb-8f68-849f5eacc55c
          --cos-directory "Synthetic_Sequential_BERKA-0213231454" --cos-dependencies-archive
          "Train Sequential synthetizer-0689ac2f-44f7-41c8-8a78-ac95824b8691.tar.gz"
          --file "Train Sequential synthetizer.ipynb" --inputs "outputs/data_columns.pkl;outputs/real_data.csv;outputs/shape.json;outputs/dataset_attrs.json"
          --outputs "outputs/model.pkl" ']
      command: [sh, -c]
      env:
      - {name: MODEL_PATH, value: '''outputs/model.pkl'''}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220207113243.azurecr.io/pipelines_ydata:0.32.25-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: Train Sequential synthetizer.ipynb, elyra/pipeline-source: Synthetic_Sequential_BERKA.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Synthetic_Sequential_BERKA
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: Train_Sequential_synthetizer
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
